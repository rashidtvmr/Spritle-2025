---
import BlogsCardContainer from "./BlogsCardContainer.astro";
import GradientHeading from "./GradientHeading.astro";
import TipCardContainer from "@/components/DynamicProps/TipCardContainer.astro";
import Button from "@/components/common/button.astro";

// Define TypeScript interfaces
interface BlogItem {
  image: string;
  title: string;
  description: string;
  date: string;
}

interface HeroDescription {
  description: string;
  buttons: string;
}

interface Contents {
  hero_text: string;
  hero_description: HeroDescription;
  blogs_card: BlogItem[];
  tip_card: BlogItem[];
}

// Get props from Astro
const { hero_text, hero_description, blogs_card, tip_card } = Astro.props
  .contents as Contents;

// Determine which cards to display
const cardType = blogs_card.length > 0 ? "blog" : "tip";
const cards = cardType === "blog" ? blogs_card : tip_card;
---

<main class="container">
  <!-- Hero Section -->
  <section
    class="flex flex-col items-center text-center space-y-5 md:space-y-10 my-10"
  >
    <h2>
      <GradientHeading text={hero_text} />
    </h2>
    <p class="text-csgradient text-title-body mt-4 lg:px-20">
      {hero_description.description}
    </p>
    <div class="">
      <Button
        arrow={true}
        text="Get Started"
        className="my-10 px-20 !hover:bg-card"
        type="link"
        href="#"
      />
    </div>
  </section>

  <!-- Blog or Tip Cards Section -->
  <section class="my-10 md:my-20">
    <div
      class={`grid gap-4 md:gap-7 ${cardType === "blog" ? "grid-cols-1 md:grid-cols-2 lg:grid-cols-3 " : "grid-cols-1 md:grid-cols-2"}`}
    >
      {
        cards.map((card) =>
          cardType === "blog" ? (
            <BlogsCardContainer item={card} />
          ) : (
            <TipCardContainer items={[card]} />
          )
        )
      }
    </div>
  </section>
</main>
