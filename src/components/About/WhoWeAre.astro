---
import GradientHeading from "../DynamicProps/GradientHeading.astro";
import Ourprocess from "./Ourprocess.astro";
import { Image } from "astro:assets";

import RightArrow from "../../assets/icons/rightarrow.svg";
import Button from "@/components/common/button.astro";

import Founder from "@/assets/images/about/loganathan.png";
import CEO from "@/assets/images/about/manogar.png";
import MD from "@/assets/images/about/balaji.png";
import CoFounder from "@/assets/images/about/suren.png";

import Saasly from "@/assets/icons/saasly.svg";
import Seewise from "@/assets/icons/seewise.svg";
import Smartle from "@/assets/icons/smartle.svg";

const MegaMinds = [
  {
    name: "Mr. Loganathan",
    designation: "Founder",
    profile: Founder,
    alt: "Founder Profile Image",
  },
  {
    name: "Mr. Manogar",
    designation: "CEO",
    profile: CEO,
    alt: "CEO Profile Image",
  },
  {
    name: "Mr. Balaji D Loganathan",
    designation: "Co-founder & MD",
    profile: MD,
    alt: "Co-founder & MD Profile Image",
  },
  {
    name: "Mr. Surendran S",
    designation: "Co-founder & CTO",
    profile: CoFounder,
    alt: "Co-founder Profile Image",
  },
];
---

<div class="flex flex-col justify-center items-center text-center">
  <GradientHeading
    text="Meet Spritle's Talented Clan of Tech Experts"
    maxWidth="max-w-[1130px]"
  />
  <div class="w-screen flex justify-center items-center flex-col">
    <p
      class="font-normal lg:mt-8 mt-4 text-title-body text-primary max-w-[700px] px-5 md:px-0"
    >
      Entranced by the alluring spell of innovative tech trends, we craft
      futuristic solutions for all!
    </p>

    <Button
      arrow={true}
      text="Get Started"
      className="my-10 px-20"
      type="link"
      href="#"
    />

    <h1
      class="text-heading text-primary font-dmSans font-semibold px-5 md:px-0
            md:py-1.5 lg:py-1.5 xl:pt-18 pt-3 md:pt-3"
    >
      Mission and The Journey So Far
    </h1>
    <p
      class="text-secondary mt-4 text-subbody font-normal max-w-[1424px] pt-10"
    >
      Software is created for people, and so is our mission-focused towards
      people-centric solutions! From creating the questful ambiance for working
      on tech tools to honoring the harbor that goes into making great software,
      we are a hub of software innovators. We always strive towards making
      futuristic software cost-effective and user-friendly!
    </p>
  </div>
  <!-- Counter Section -->
  <div class="py-18 xl:mt-10 mt-5" id="counterSection">
    <div
      class="mx-auto px-4 grid grid-cols-2 lg:grid-cols-4 gap-6 md:gap-10 lg:gap-20 text-center xl:px-30 px-5"
    >
      <!-- Box 1 -->
      <div
        class="w-full border-12 border-white rounded-tl-[62.33px] rounded-br-[62.33px] overflow-hidden flex items-center justify-center"
      >
        <div class="p-6">
          <div
            class="font-poppins font-semibold text-[28px] sm:text-[58.57px] leading-[32px] sm:leading-[82.85px] text-white text-center"
          >
            <span data-target="15" id="years">0</span>+
          </div>
          <p class="text-white text-l sm:text-xl">Years</p>
        </div>
      </div>

      <!-- Box 2 -->
      <div
        class="w-full border-12 border-white rounded-tl-[62.33px] rounded-br-[62.33px] overflow-hidden flex items-center justify-center"
      >
        <div class="p-6">
          <div
            class="font-poppins font-semibold text-[28px] sm:text-[58.57px] leading-[32px] sm:leading-[82.85px] text-white text-center"
          >
            <span data-target="150" id="happyClients">0</span>+
          </div>
          <p class="text-white text-l sm:text-xl">Happy Clients</p>
        </div>
      </div>

      <!-- Box 3 -->
      <div
        class="w-full border-12 border-white rounded-tl-[62.33px] rounded-br-[62.33px] overflow-hidden flex items-center justify-center"
      >
        <div class="p-6">
          <div
            class="font-poppins font-semibold text-[28px] sm:text-[58.57px] leading-[32px] sm:leading-[82.85px] text-white text-center"
          >
            <span data-target="200" id="projects">0</span>+
          </div>
          <p class="text-gray-300 text-l sm:text-xl">Projects</p>
        </div>
      </div>

      <!-- Box 4 -->
      <div
        class="w-full border-12 border-white rounded-tl-[62.33px] rounded-br-[62.33px] overflow-hidden flex items-center justify-center"
      >
        <div class="p-6">
          <div
            class="font-poppins font-semibold text-[28px] sm:text-[58.57px] leading-[32px] sm:leading-[82.85px] text-white text-center"
          >
            <span data-target="100" id="integrations">0</span>+
          </div>
          <p class="text-gray-300 text-l sm:text-xl">
            Third Party Integrations
          </p>
        </div>
      </div>
    </div>
  </div>

  <!-- Child Companies Section -->
  <section class="my-20 w-full">
    <h1 class="font-medium text-3xl lg:text-4xl my-15">Our Subsidiaries</h1>
    <div class="w-full flex flex-wrap justify-around gap-5">
      <Seewise alt="Seewise" />
      <Saasly alt="Saasly" />
      <Smartle alt="Marlteai" class="" />
    </div>
  </section>

  <!-- Megaminds Behind Spritle Section -->
  <section class="my-20">
    <h1 class="font-medium text-3xl lg:text-4xl my-15">
      Megaminds Behind Spritle
    </h1>
    <ul
      class="grid grid-cols-2 lg:grid-cols-4 gap-5 gap-y-10 lg:gap-20 xl:gap-30"
    >
      {
        MegaMinds.map((person) => (
          <li class="flex flex-col items-center justify-items-start space-y-3 text-2xl rounded-primary text-primary">
            <Image
              src={person.profile}
              alt={person.alt}
              class="size-62 object-cover rounded-primary"
            />
            <p class="font-bold text-primary">{person.name}</p>
            <small class=" text-primary">{person.designation}</small>
          </li>
        ))
      }
    </ul>
  </section>
</div>

<script lang="js">
  // Counter animation functionality
  function animateCounter(id, target, duration) {
    let start = 0;
    const element = document.getElementById(id);
    if (!element) return;
    const increment = target / duration;
    let current = start;

    function updateCounter() {
      current += increment;
      if (current >= target) {
        element.textContent = target.toString();
      } else {
        element.textContent = Math.floor(current).toString();
        requestAnimationFrame(updateCounter);
      }
    }
    updateCounter();
  }

  function handleIntersection(entries, observer) {
    entries.forEach((entry) => {
      if (entry.isIntersecting) {
        animateCounter("years", 15, 20);
        animateCounter("happyClients", 150, 20);
        animateCounter("projects", 200, 20);
        animateCounter("integrations", 100, 20);
        observer.unobserve(entry.target);
      }
    });
  }

  const observer = new IntersectionObserver(handleIntersection, {
    threshold: 0.5,
  });

  const counterSection = document.getElementById("counterSection");
  if (counterSection) {
    observer.observe(counterSection);
  }
</script>
