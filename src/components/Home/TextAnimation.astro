<section
  class="scroll-reveal h-[30vh] md:h-[40vh] lg:h-[50vh] xl:h-[80vh] flex justify-center items-center md:pl-0 md:mb-10"
>
  <p
    class="font-dm-sans leading-[1.5] font-light text-xl md:text-2xl lg:text-[36px] text-start max-h-[332px] px-8 md:px-16 lg:px-24"
  >
    <span class="static-text">At Spritle, </span>
    <span class="first-text fade-text">
      we are not just Engineers; we are visionaries harnessing the
      transformative power of artificial intelligence to propel industries into
      the future for the past 16 years.
    </span>
  </p>
</section>

<style>
  @media (max-width: 468px) {
    p {
      font-size: 1.2rem;
      line-height: 25px;
    }
  }
  .scroll-reveal span:not(.static-text) {
    color: hsl(0 0% 100% / 0.2);
    background-clip: text;
    background-repeat: no-repeat;
    background-size: 0% 100%;
    background-image: linear-gradient(90deg, white, white);
    animation: scroll-reveal linear forwards;
    animation-timeline: view(y);
    animation-range-start: contain 15vh;
    animation-range-end: contain 50vh;
  }

  .font-dm-sans {
    font-family: "DM Sans", sans-serif;
  }

  .first-text {
    /* transition: all 0.9s ease-in-out; */
    opacity: 0;
  }

  .fade-text {
    opacity: 0;
  }

  .fade-text.fade-in {
    opacity: 1;
    animation: fadeIn 0.8s forwards 0.3s;
  }

  @keyframes fadeIn {
    from {
      opacity: 0;
    }
    to {
      opacity: 1;
    }
  }

  @keyframes scroll-reveal {
    to {
      background-size: 100% 100%;
    }
  }

  .static-text {
    opacity: 1;
    background: none;
    color: #e2e2e2;
  }
</style>

<script>
  document.addEventListener("DOMContentLoaded", () => {
    const firstTextSpan = document.querySelector(".first-text");

    function handleIntersection(entries, observer) {
      entries.forEach((entry) => {
        if (entry.isIntersecting) {
          firstTextSpan.style.animationDuration = `${entry.intersectionRatio * 0.5}s`;
          firstTextSpan.classList.add("fade-in");
        } else {
          firstTextSpan.classList.remove("fade-in");
        }
      });
    }

    const observer = new IntersectionObserver(handleIntersection, {
      threshold: Array.from({ length: 50 }, (_, i) => i * 0.01),
    });

    observer.observe(firstTextSpan);
  });
</script>
